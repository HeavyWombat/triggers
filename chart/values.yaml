---
replicaCount: 1

image:
  # fully qualified image name, as in the repository with namespace, project and tag
  name: ghcr.io/shipwright-io/triggers:latest
  pullPolicy: IfNotPresent

imagePullSecrets: []

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

service:
  webhook:
    port: 80
  probe:
    port: 8081

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          backend:
            serviceName: chart-example.local
            servicePort: 80
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
affinity: {}
  # nodeAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 1
  #       preference:
  #         matchExpressions:
  #           - key: node-role.kubernetes.io/control-plane
  #             operator: In
  #             values:
  #               - control-plane
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #     - weight: 100
  #       podAffinityTerm:
  #         labelSelector:
  #           matchLabels:
  #             app.kubernetes.io/name: shipwright-triggers
  #         topologyKey: topology.kubernetes.io/zone

# https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
nodeSelector: {}
  # node-role.kubernetes.io/control-plane: control-plane

# https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: []
  # - key: node-role.kubernetes.io/control-plane
  #   operator: "Exists"
  #   effect: "NoSchedule"
